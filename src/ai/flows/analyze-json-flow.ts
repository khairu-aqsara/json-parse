
'use server';
/**
 * @fileOverview An AI flow to analyze JSON data, generate a suggested Zod schema, and provide insights.
 *
 * - analyzeJsonData - A function that handles the JSON analysis process.
 * - AnalyzeJsonInput - The input type for the analyzeJsonData function.
 * - AnalyzeJsonOutput - The return type for the analyzeJsonData function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const AnalyzeJsonInputSchema = z.object({
  jsonString: z.string().describe('The raw JSON string to be analyzed.'),
});
export type AnalyzeJsonInput = z.infer<typeof AnalyzeJsonInputSchema>;

const AnalyzeJsonOutputSchema = z.object({
  suggestedZodSchema: z
    .string()
    .describe(
      'A Zod schema string generated by the AI, representing the structure of the input JSON. This schema should be copy-pasteable TypeScript code.'
    ),
  dataInsights: z
    .string()
    .describe(
      'Human-readable insights about the JSON data, its structure, potential characteristics, or what it might represent. This should be a concise summary.'
    ),
});
export type AnalyzeJsonOutput = z.infer<typeof AnalyzeJsonOutputSchema>;

export async function analyzeJsonData(input: AnalyzeJsonInput): Promise<AnalyzeJsonOutput> {
  return analyzeJsonFlow(input);
}

const analyzeJsonPrompt = ai.definePrompt({
  name: 'analyzeJsonPrompt',
  input: {schema: AnalyzeJsonInputSchema},
  output: {schema: AnalyzeJsonOutputSchema},
  prompt: `You are an expert data analyst and TypeScript developer specializing in Zod schemas.
Given the following JSON data, please perform two tasks:

1.  **Generate a Zod Schema:** Create a Zod schema string that accurately represents the structure of this JSON.
    *   The schema should be as precise as possible.
    *   Infer types like strings, numbers, booleans, arrays (with element types if possible), and objects (with their properties).
    *   Ensure the output is a valid Zod schema string ready to be used in TypeScript.
    *   Example: \`z.object({{'{'}} name: z.string(), age: z.number() {{'}'}})\`

2.  **Provide Data Insights:** Write a brief (2-4 sentences) human-readable insight into the data.
    *   This could include identifying the main entities or purpose of the data, common patterns, or any notable characteristics.
    *   Example: "This JSON appears to represent a list of user profiles, each containing contact information and activity logs."

JSON Data:
\`\`\`json
{{{jsonString}}}
\`\`\`

Return your response in the specified output format, with the Zod schema string in 'suggestedZodSchema' and the insights in 'dataInsights'.`,
});

const analyzeJsonFlow = ai.defineFlow(
  {
    name: 'analyzeJsonFlow',
    inputSchema: AnalyzeJsonInputSchema,
    outputSchema: AnalyzeJsonOutputSchema,
  },
  async (input) => {
    // Basic validation: check if jsonString is potentially valid JSON before sending to AI
    try {
      JSON.parse(input.jsonString);
    } catch (e) {
      throw new Error("Invalid JSON string provided for analysis.");
    }

    if (input.jsonString.trim().length < 2) { // Minimal JSON is '{}' or '[]'
        throw new Error("JSON string is too short to be meaningful for analysis.");
    }

    const {output} = await analyzeJsonPrompt(input);
    if (!output) {
      throw new Error('AI analysis did not produce an output.');
    }
    return output;
  }
);
